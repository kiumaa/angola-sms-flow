name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Run unit tests
        run: npx vitest run --reporter=verbose
      
      - name: Run integration tests
        run: npx vitest run src/tests/integration.test.tsx --reporter=verbose
      
      - name: Run accessibility tests
        run: npx vitest run src/tests/accessibility.test.tsx --reporter=verbose
      
      - name: Run performance tests
        run: npx vitest run src/tests/performance.test.tsx --reporter=verbose
      
      - name: Generate coverage report
        run: npx vitest --coverage --reporter=json --reporter=html
        continue-on-error: true
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30
      
      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.node-version }}
          path: dist/
          retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for dependency vulnerabilities
        run: npm audit fix --dry-run
        continue-on-error: true
      
      - name: Security summary
        run: |
          echo "## Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependencies checked" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Vulnerability scan completed" >> $GITHUB_STEP_SUMMARY

  notify:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()
    
    steps:
      - name: Success notification
        if: ${{ needs.test.result == 'success' && needs.security.result == 'success' }}
        run: |
          echo "✅ All tests passed successfully!"
          echo "✅ Security checks completed!"
      
      - name: Failure notification
        if: ${{ needs.test.result == 'failure' || needs.security.result == 'failure' }}
        run: |
          echo "❌ Pipeline failed! Check the logs for details."
          exit 1
